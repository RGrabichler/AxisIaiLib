<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="ResetTask" Id="{c1bce311-d5a5-481b-bcae-871de8168706}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ResetTask EXTENDS TcoCore.TcoTask IMPLEMENTS IAxisIAI
VAR

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[THIS^.Enabled := NOT DriveRef.AxisStatus.Moving;

IF Execute() THEN
    DriveRef.FaultTask.Restore();

    IF DriveRef.PlcToDrive.ControlSignal.RES THEN
        DriveRef.PlcToDrive.ControlSignal.RES := FALSE;
    ELSE
        DriveRef.PlcToDrive.ControlSignal.RES := TRUE;
        DriveRef.ClearError();

    END_IF

    DriveRef.PlcToDrive.ControlSignal.INC := FALSE;
    DriveRef.PlcToDrive.Accelerartion     := 1;
    DriveRef.PlcToDrive.PushCurrentLimit  := 1;
    DriveRef.PlcToDrive.PositioningBand   := 1;
    DriveRef.PlcToDrive.TargetPosition    := 1;
    DriveRef.PlcToDrive.Velocity          := 1;

    DoneWhen(NOT (DriveRef.DriveToPlc.StatusSignal.ALM OR DriveRef.AxisStatus.Error));
END_IF
]]></ST>
    </Implementation>
    <Property Name="DriveRef" Id="{93ad89d2-912e-4947-bb24-c3ab21cb5755}">
      <Declaration><![CDATA[PROPERTY DriveRef : REFERENCE TO AxisIAI]]></Declaration>
      <Get Name="Get" Id="{d6eab898-9a19-491d-a7fa-13c531e93834}">
        <Declaration><![CDATA[VAR
    _drive : POINTER TO AxisIAI;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYPOINTER(THIS^._ParentObject, _drive) THEN
    DriveRef REF= _drive^;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{a863d219-2ec9-423d-a4d4-0b6e00630f1f}">
      <Declaration><![CDATA[METHOD PUBLIC FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode  : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
    ParentObject : ITcoObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.FB_init(bInitRetains := bInitRetains, bInCopyCode := bInCopyCode, ParentObject := ParentObject);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnDone" Id="{b2e2e667-fcf8-4a64-b18a-de704a17bcdf}">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Executes when task reaches the ```Done``` state .
        </summary>
    </docu>
~*)
METHOD PROTECTED OnDone
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DriveRef.RestoreTasks();
Restore();
DriveRef.ClearError();

DriveRef.PlcToDrive.ControlSignal.RES := FALSE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Restore" Id="{76593bd6-d261-40c4-bd06-f6daa51eb0cc}">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Restores this instance to the Ready state. Can be called explicitly or from within one of the restore mechanisms.
            <para>
                See also <see cref="PlcDocu.TcoCore.TcoTask.AutoRestorable()"/>
            </para>
        </summary>
    </docu>
~*)
METHOD Restore : ITcoRestorable]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Restore();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>