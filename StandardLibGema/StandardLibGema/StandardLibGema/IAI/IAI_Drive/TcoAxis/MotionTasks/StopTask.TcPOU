<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="StopTask" Id="{b4ef30fa-ed6d-4bf8-ba5d-3f302d7c811f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK StopTask EXTENDS TcoCore.TcoTask IMPLEMENTS IAxisIAI
VAR
    {attribute addProperty Name "<#Deceleration#>"}
    _deceleration : UINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF Execute() THEN
    DriveRef.PlcToDrive.ControlSignal.STP := TRUE;
    DriveRef.PlcToDrive.ControlSignal.RES := TRUE;

    DoneWhen(DriveRef.AxisStatus.NotMoving);
    ThrowWhen(DriveRef.AxisStatus.Error);
END_IF]]></ST>
    </Implementation>
    <Property Name="DriveRef" Id="{5b3ff870-2b55-4c31-9461-2e97829e64f9}">
      <Declaration><![CDATA[PROPERTY DriveRef : REFERENCE TO AxisIAI]]></Declaration>
      <Get Name="Get" Id="{b801e818-3288-48fe-be97-0dc9bbecfb21}">
        <Declaration><![CDATA[VAR
    _drive : POINTER TO AxisIAI;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYPOINTER(THIS^._ParentObject, _drive) THEN
    DriveRef REF= _drive^;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{a01b545c-772e-4481-867f-ad7c345a495a}">
      <Declaration><![CDATA[METHOD PUBLIC FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode  : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
    ParentObject : ITcoObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.FB_init(bInitRetains := bInitRetains, bInCopyCode := bInCopyCode, ParentObject := ParentObject);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="InvokeWithParams" Id="{0033654d-54a2-4d10-b22d-7fa9d28ea5bb}">
      <Declaration><![CDATA[METHOD INTERNAL InvokeWithParams : ITcoTaskStatus
VAR_INPUT
    inDeceleration : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_deceleration    := inDeceleration;
InvokeWithParams := THIS^.Invoke();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnDone" Id="{6abf43e7-7dcd-4ca9-9b18-569cf705a015}">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Executes when task reaches the ```Done``` state .
        </summary>
    </docu>
~*)
METHOD PROTECTED OnDone
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DriveRef.PlcToDrive.ControlSignal.STP := FALSE;
DriveRef.PlcToDrive.ControlSignal.RES := FALSE;
DriveRef.Restore();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Restore" Id="{a0cf89d1-51a6-41c5-812c-4927e2dbc215}">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Restores this instance to the Ready state. Can be called explicitly or from within one of the restore mechanisms.
            <para>
                See also <see cref="PlcDocu.TcoCore.TcoTask.AutoRestorable()"/>
            </para>
        </summary>
    </docu>
~*)
METHOD Restore : ITcoRestorable]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Restore();
DriveRef.PlcToDrive.ControlSignal.STP := FALSE;
DriveRef.PlcToDrive.ControlSignal.RES := FALSE;
//DriveRef.Restore();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>